{
    "segmenttree": {
        "prefix": "segment",
        "body": [
            "void maketree($1 *arr, int st, int en, int ind , $2 *seg)",
            "{",
            "    if(st==en) seg[ind] = arr[st];",
            "    else{",
            "        maketree(arr,left);",
            "        maketree(arr,right);",
            "        seg[ind] = $3",
            "    }",
            "}",
            "",
            "void update($4, int st, int en, int ind, $2 *seg)",
            "{",
            "    if($6) return;",
            "    else if(st==en){",
            "        seg[ind] = $7",
            "    }",
            "    else{",
            "        update($5,left);",
            "        update($5,right);",
            "        seg[ind] = $3",
            "    }",
            "}",
            "",
            "$8 getans(int l, int r, int st, int en, int ind, $2 *seg)",
            "{",
            "    if(r < st or l > en) return $9;",
            "    else if(r >= en and l <= st) return seg[ind];",
            "    else{",
            "        if(st==en) return seg[ind];",
            "        auto a = getans(l,r,left);",
            "        auto b = getans(l,r,right);",
            "        auto c = $10",
            "        return c;",
            "    }",
            "}",
            ""
        ],
        "description": "SEgment tree'"
    }
}