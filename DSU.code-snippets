{
    "dsuint": {
        "prefix": "dsuint",
        "body": [
            "class DSU {",
            "    vector<int> root;",
            "    vector<int> sz;",
            "public:",
            "    int find(int x) {",
            "        if (root[x] != x) root[x] = find(root[x]);",
            "        return root[x];",
            "    }",
            "    void join(int x, int y) {",
            "        x = find(x);",
            "        y = find(y);",
            "        if (x == y) return;",
            "        if (sz[x] > sz[y]) swap(x, y);",
            "        root[x] = y;",
            "        sz[y] += sz[x];",
            "        sz[x] = 0;",
            "    }",
            "    DSU(int n) {",
            "        root = vector<int>(n+1);",
            "        sz = vector<int>(n+1);",
            "        iota(root.begin(), root.end(), 0);",
            "        sz.assign(n+1,0);",
            "    }",
            "};"
        ],
        "description": "dsuint"
    },
    "dsu": {
        "prefix": "dsu",
        "body": [
            "",
            "template<typename T>",
            "class DSU {",
            "    map<T,T> root;",
            "    map<T,int> sz;",
            "public:",
            "    DSU() {}",
            "    void init(T val) {",
            "        if(!root.count(val)) {",
            "            root[val] = val;",
            "            sz[val] = 1;",
            "        }",
            "    }",
            "",
            "    T find(T val, bool create = true) {",
            "        if(!root.count(val)) {",
            "            if(!create) return T();",
            "            init(val);",
            "            return val;",
            "        }",
            "    }",
            "",
            "    void join(T a, T b, bool create = true) {",
            "        a = find(a,create);",
            "        b = find(b,create);",
            "        if(a == b) return;",
            "        if(sz[a] > sz[b]) {",
            "            swap(a, b);",
            "        }",
            "        root[b] = a;",
            "        sz[a] += sz[b];",
            "        sz[a] = 0;",
            "    }",
            "};",
            ""
        ],
        "description": "dsu"
    }
}